version: '3.8'

services:
  minio:
    image: minio/minio:RELEASE.2023-03-13T19-46-17Z
    restart: always
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID:-minio}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY:-minio123}
    command: server /data --console-address ":9001"
    expose:
      - '9000'
      - '9001'
    volumes:
      - minio-data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  postgres:
    image: 'postgres:13-alpine'
    restart: always
    environment:
      POSTGRES_USER: ${APP_DATABASE_USER:-yaroute}
      POSTGRES_PASSWORD: ${APP_DATABASE_PASSWORD:-yaroute}
      POSTGRES_DB: ${APP_DATABASE_NAME:-yaroute}
      PGDATA: /data/postgres
    volumes:
      - postgres-data:/data/postgres

  rails:
    image: ${APP_IMAGE:-ghcr.io/kmmndr/yaroute:latest}
    build: .
    restart: always
    environment:
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-}
      RAILS_ENV: ${PROJECT_ENVIRONMENT:-production}
      NODE_ENV: ${PROJECT_ENVIRONMENT:-production}
      RAILS_SERVE_STATIC_FILES: ${RAILS_SERVE_STATIC_FILES:-0}
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT:-1}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-weak_secret_key}
      #
      DATABASE_URL: postgresql://${APP_DATABASE_USER:-yaroute}:${APP_DATABASE_PASSWORD:-yaroute}@postgres:5432/${APP_DATABASE_NAME:-yaroute}
      #
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-minio}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-minio123}
      AWS_BUCKET: ${AWS_BUCKET:-active-storage}
      AWS_REGION: ${AWS_REGION:-eu-west-3}
      AWS_ENDPOINT: ${AWS_ENDPOINT:-http://minio:9000}
      #
      PS1: "[$$RAILS_ENV] \\w \\$$ "
    depends_on:
      - postgres

volumes:
  minio-data:
  postgres-data:
